class WordDistance {
    Map<String, List<Integer>> map = new HashMap<>();
    public WordDistance(String[] words) {
       for(int i = 0; i < words.length; i++){
           if(map.containsKey(words[i])){
           map.get(words[i]).add(i);
       } else{
           List<Integer> list = new ArrayList<>();
           list.add(i);
           map.put(words[i],list);
       }
    }
}    
    public int shortest(String word1, String word2) {
        List<Integer> l1 = map.get(word1);
        List<Integer> l2 = map.get(word2);
        int i = 0;
        int j = 0;
        int result = Integer.MAX_VALUE;
        while(i < l1.size() && j < l2.size()){
            if(l1.get(i) < l2.get(j)){
                result = Math.min(result, l2.get(j) - l1.get(i));
                i++;
            }else{
                result = Math.min(result, l1.get(i) - l2.get(j));
                j++;
            }
        }
        return result;
    }
  }


/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
